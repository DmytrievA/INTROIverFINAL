//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.12.18 at 04:52:56 AM EET 
//


package org.itroi.task;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.*;

import org.itroi.reminder.ReminderType;


/**
 * <p>Java class for RemindersType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="RemindersType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="reminder" type="{http://www.itroi.org/reminder}ReminderType" maxOccurs="5"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "RemindersType", propOrder = {
    "reminder"
})
@XmlRootElement(name = "Reminders")
public class RemindersType {

    @XmlElement(required = true)
    protected List<ReminderType> reminder;
public RemindersType(){
reminder = new ArrayList<ReminderType>();
}
    /**
     * Gets the value of the reminder property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the reminder property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getReminder().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ReminderType }
     * 
     * 
     */
    public void addReminder(ReminderType rem){
        this.reminder.add(rem);
    }
    public List<ReminderType> getReminder() {
        if (reminder == null) {
            reminder = new ArrayList<ReminderType>();
        }
        return this.reminder;
    }
    @Override
public String toString(){
        StringBuffer s = new StringBuffer();
        s.append("[\n");
        for (ReminderType reminderType : reminder) {
			s.append(reminderType.toString()).append("\n");
		}
        s.append("]");
        return s.toString();
}
}
